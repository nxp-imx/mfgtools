uuu_version 1.0.0
#
# uuu(universal update utility) command list file
# Firstly line must be uuu_version show minimize uuu host version number
# ---------------------------------------------------------------------
# Command Format PROTOCOL COMMAND ARG
# PROTOCOL
#          ALL protocol supported common command
#                      done        #last command for whole flow
#                      delay <ms>  # delay ms
#                      sh\shell <any shell command> #Run shell command, such as wget to file from network
#                      <        <any shell command> #use shell command's output as uuu command
#                               this command generally used for burn some sequence number, such production id, mac address
#				for example:   
#                                      FB:< echo ucmd print
#
#          CFG:  Config protocol of specific usb device vid/pid
#                SDPS|SDP|FB\Fastboot|FBK -chip <chip name> -pid <pid> -vid <vid> [-bcdversion <ver>]
#
#          SDPS: Stream download after MX8QXPB0
#                      boot  -f  <filename> [-offset 0x0000]
#
#          SDP:  iMX6/iMX7 HID download protocol.
#                      dcd   -f  <filename>
#                      write -f  <filename> [-addr 0x000000] [-ivt 0]
#                      jump  -f  <filename> [-ivt 0]
#                      boot  -f  <filename> [-nojump]
#                      rdmem -addr <mem_address> -format <8|16|32>
#                      wrmem -addr <mem_address> -format <8|16|32> -value <mem_value>
#
#          FB[-t timeout]:\Fastboot: android fastboot protocol. unit of timeout is ms
#                      getvar
#                      ucmd <any uboot command>
#                      acmd <any never returned uboot command, like booti, reboot>
#                      flash [-raw2sparse] <partition> <filename>
#                      download -f <filename>
#                      crc -f <filename> [-format "mmc read $loadaddr"] [-blksz 512] [-each 0x4000000]
#                                        [-seek 0] [-skip 0] [-nostop]
#                                          each          CRC size each loop
#                                          seek          skip bytes from storage
#                                          skip          skip bytes from -f
#                                          nostop        continue check even if found mismatch
#                      write -f <filename> [-format "mmc write $loadaddr"] [-blksz 512] [-each 0x4000000]
#                                        [-seek 0] [-skip 0] [-nostop]
#                                          each          write size each loop
#                                          seek          skip bytes from storage
#                                          skip          skip bytes from -f
#                                          nostop        continue write even if error occurs
#
#
#          FBK: community with kernel with fastboot protocol. DO NOT compatible with fastboot tools.
#                      ucmd <any kernel command> and wait for command finish
#                      acmd <any kernel command> don't wait for command finish
#                      sync                      wait for acmd process finish.
#                      ucp <soure> <destinate>   copy file from/to target
#                                                T:<filename> means target board file.
#                                                T:- means copy data to target's stdio pipe.
#                                                copy image T:/root/image ;download image to path /root/image
#                                                copy T:/root/image image ;upload /root/image to file image.
#                      Example for transfer big file
#                              acmd tar -            ; run tar background and get data from stdio
#                              ucp rootfs.tar.gz T:- ; send to target stdio pipe
#                              sync                  ; wait for tar process exit.
#
# For example:
#          SDPS: boot -f <filename>
#          SDP:  boot -f <filename>
#          CFG: SDP: -chip imx6ull -pid 0x1234 -vid 0x5678
#
# SDP: boot -f u-boot-imx7dsabresd_sd.imx -nojump
# SDP: write -f zImage -addr 0x80800000
# SDP: write -f zImage-imx7d-sdb.dtb -addr 0x83000000
# SDP: write -f fsl-image-mfgtool-initramfs-imx_mfgtools.cpio.gz.u-boot -addr 0x83800000
# SDP: jump -f u-boot-dtb.imx -ivt

CFG: FB:  -vid 0x18D1 -pid 0x0D02
SDP: boot -f u-boot-dtb.imx
FB: getvar version
FB: ucmd setenv fastboot_buffer 0x80800000
FB: download -f zImage
FB: ucmd setenv fastboot_buffer 0x83000000
FB: download -f zImage-imx7d-sdb.dtb
FB: ucmd bootz 0x80800000 - 0x83000000
